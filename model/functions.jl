# File generated automatically from dogtail.f
function ke(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return 0.5*ixa*u1*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3))+((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))+(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))+u1) + 0.5*ixa*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3))*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3))+((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))+(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))+u1) + 0.5*ixa*((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3))+((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))+(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))+u1) + 0.5*ixa*(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3))+((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))+(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))+u1) + 0.5*iya*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))-u2) + 0.5*iza*((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))-u3) + 0.5*ixb*u4*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+u4+((cq5)*(cq6))*u1+((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2+((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3) + 0.5*ixb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+u4+((cq5)*(cq6))*u1+((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2+((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3) + 0.5*ixb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+u4+((cq5)*(cq6))*u1+((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2+((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3) + 0.5*ixb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+u4+((cq5)*(cq6))*u1+((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2+((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3) + 0.5*ixb*((cq5)*(cq6))*u1*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+u4+((cq5)*(cq6))*u1+((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2+((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3) + 0.5*ixb*((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+u4+((cq5)*(cq6))*u1+((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2+((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3) + 0.5*ixb*((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))+u4+((cq5)*(cq6))*u1+((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*u2+((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*u3) + 0.5*iyb*((cq5)*(sq6))*u1*(((cq5)*(sq6))*u1-((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))-(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))-u5-((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2-((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3) + 0.5*izb*((cq5)*(sq4))*u2*(((cq5)*(sq4))*u2-((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))-(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))-u6-(sq5)*u1-((cq5)*(cq4))*u3) - 0.5*iya*u2*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))-u2) - 0.5*iza*u3*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))-u3) - 0.5*iya*((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))-u2) - 0.5*iya*(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))-u2) - 0.5*iza*((soz)*oyp + (coy)*(coz)*oxp)*(sq2)*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))-u3) - 0.5*iza*(ozp + (soy)*oxp)*((cq2)*(cq1))*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))-u3) - 0.5*iyb*u5*(((cq5)*(sq6))*u1-((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))-(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))-u5-((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2-((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3) - 0.5*izb*u6*(((cq5)*(sq4))*u2-((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))-(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))-u6-(sq5)*u1-((cq5)*(cq4))*u3) - 0.5*iyb*((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*(((cq5)*(sq6))*u1-((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))-(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))-u5-((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2-((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3) - 0.5*iyb*((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*(((cq5)*(sq6))*u1-((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))-(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))-u5-((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2-((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3) - 0.5*iyb*(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))*(((cq5)*(sq6))*u1-((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))-(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))-u5-((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2-((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3) - 0.5*iyb*((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2*(((cq5)*(sq6))*u1-((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))-(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))-u5-((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2-((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3) - 0.5*iyb*((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3*(((cq5)*(sq6))*u1-((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))-(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))-u5-((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*u2-((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*u3) - 0.5*izb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))*(((cq5)*(sq4))*u2-((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))-(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))-u6-(sq5)*u1-((cq5)*(cq4))*u3) - 0.5*izb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))*(((cq5)*(sq4))*u2-((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))-(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))-u6-(sq5)*u1-((cq5)*(cq4))*u3) - 0.5*izb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))*(((cq5)*(sq4))*u2-((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))-(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))-u6-(sq5)*u1-((cq5)*(cq4))*u3) - 0.5*izb*(sq5)*u1*(((cq5)*(sq4))*u2-((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))-(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))-u6-(sq5)*u1-((cq5)*(cq4))*u3) - 0.5*izb*((cq5)*(cq4))*u3*(((cq5)*(sq4))*u2-((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))-((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))-(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))-u6-(sq5)*u1-((cq5)*(cq4))*u3) - 0.5*ma*(2*pxp*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)))*((lao*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-lao*u3)+2*pyp*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))*((lao*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-lao*u3)+2*pzp*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3)))*((lao*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-lao*u3)-pxp^2-pyp^2-pzp^2-((lao*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-lao*u3)^2-((lao*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-lao*u2)^2-2*pxp*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1)))*((lao*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-lao*u2)-2*pyp*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1)))*((lao*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-lao*u2)-2*pzp*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1)))*((lao*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-lao*u2)) - 0.5*mb*(2*pxp*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)))*((la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-la*u3)+2*pyp*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))*((la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-la*u3)+2*pzp*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3)))*((la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-la*u3)+2*pxp*(((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))) + ((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1))) - ((cq5)*(sq6))*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))))*((lbo*((cq5)*(sq4)))*u2-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))))-lbo*u6-(lbo*(sq5))*u1-(lbo*((cq5)*(cq4)))*u3)+2*pyp*(((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))) + ((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1))) - ((cq5)*(sq6))*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))))*((lbo*((cq5)*(sq4)))*u2-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))))-lbo*u6-(lbo*(sq5))*u1-(lbo*((cq5)*(cq4)))*u3)+2*pzp*(((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))) + ((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))) - ((cq5)*(sq6))*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))))*((lbo*((cq5)*(sq4)))*u2-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))))-lbo*u6-(lbo*(sq5))*u1-(lbo*((cq5)*(cq4)))*u3)+2*((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-la*u2)*((lbo*((cq5)*(sq4)))*u2-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))))-lbo*u6-(lbo*(sq5))*u1-(lbo*((cq5)*(cq4)))*u3)-pxp^2-pyp^2-pzp^2-((la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-la*u3)^2-((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-la*u2)^2-2*pxp*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1)))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-la*u2)-2*pyp*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1)))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-la*u2)-2*pzp*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1)))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-la*u2)-((lbo*((cq5)*(sq4)))*u2-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))))-lbo*u6-(lbo*(sq5))*u1-(lbo*((cq5)*(cq4)))*u3)^2-((lbo*((cq5)*(sq6)))*u1-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))))-lbo*u5-(lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2-(lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)^2-2*pxp*((sq5)*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))) + ((cq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1))) - ((cq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))))*((lbo*((cq5)*(sq6)))*u1-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))))-lbo*u5-(lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2-(lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)-2*pyp*((sq5)*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((cq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1))) - ((cq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))*((lbo*((cq5)*(sq6)))*u1-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))))-lbo*u5-(lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2-(lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)-2*pzp*((sq5)*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((cq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))) - ((cq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))))*((lbo*((cq5)*(sq6)))*u1-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))))-lbo*u5-(lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2-(lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)-2*((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*((la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-la*u3)*((lbo*((cq5)*(sq4)))*u2-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4)))))-lbo*u6-(lbo*(sq5))*u1-(lbo*((cq5)*(cq4)))*u3)-2*((cq5)*(sq4))*((la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1))))-la*u3)*((lbo*((cq5)*(sq6)))*u1-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))))-lbo*u5-(lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2-(lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)-2*((cq5)*(cq4))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))-la*u2)*((lbo*((cq5)*(sq6)))*u1-(lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6)))))-lbo*u5-(lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2-(lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3))
end

ke(sol) = [ke(sol, t) for t ∈ sol.t]

function pe(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return -g*(ma+mb)*(lao+lbo+((ma+mb)*pz+lbo*mb*(((cq5)*(cq6))*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))))+(la*mb+lao*ma)*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))))/(ma + mb))
end

pe(sol) = [pe(sol, t) for t ∈ sol.t]

function amomx(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return (((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)))*((ixa*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3)))+(ixa*((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)))+(ixa*(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))+ixa*u1+((lbo*mb)*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - la*u2)-((lbo*mb)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*(la*u3 - (la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))) + ((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)))*((iya*((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)))+(iya*(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))+iya*u2-(iya*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3)))-(lao*ma)*((lao*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - lao*u2)-(mb*(la+lbo*((cq5)*(cq6))))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - la*u2)) + (((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))) + ((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1))) - ((cq5)*(sq6))*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))))*((iyb*((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4))))+(iyb*((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4))))+(iyb*(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))+iyb*u5+(iyb*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2+(iyb*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3-(iyb*((cq5)*(sq6)))*u1-(mb*(lbo+la*((cq5)*(cq6))))*((lbo*((cq5)*(sq6)))*u1 - (lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))) - lbo*u5 - (lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2 - (lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)) + (((cq5)*(cq6))*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1))))*((ixb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4))))+(ixb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4))))+(ixb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4))))+ixb*u4+(ixb*((cq5)*(cq6)))*u1+(ixb*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))*u2+(ixb*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*u3-((la*mb)*((cq5)*(sq6)))*((lbo*((cq5)*(sq6)))*u1 - (lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))) - lbo*u5 - (lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2 - (lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)-((la*mb)*(sq5))*((lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))) + lbo*u6 + (lbo*(sq5))*u1 + (lbo*((cq5)*(cq4)))*u3 - (lbo*((cq5)*(sq4)))*u2)) - ((lao*ma)*(pyp*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))-pzp*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))))) - (mb*(la*pyp*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))+lbo*pyp*(((cq5)*(cq6))*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))))-la*pzp*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))-lbo*pzp*(((cq5)*(cq6))*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1)))))) - (((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1)))*((iza*((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1)))-(iza*((soz)*oyp + (coy)*(coz)*oxp)*(sq2))-(iza*(ozp + (soy)*oxp)*((cq2)*(cq1)))-iza*u3-(lao*ma)*(lao*u3 - (lao*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))-(mb*(la+lbo*((cq5)*(cq6))))*(la*u3 - (la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))) - ((sq5)*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))) + ((cq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1))) - ((cq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))))*((izb*((cq5)*(sq4)))*u2-(izb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4))))-(izb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4))))-(izb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))-izb*u6-(izb*(sq5))*u1-(izb*((cq5)*(cq4)))*u3-(mb*(lbo+la*((cq5)*(cq6))))*((lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))) + lbo*u6 + (lbo*(sq5))*u1 + (lbo*((cq5)*(cq4)))*u3 - (lbo*((cq5)*(sq4)))*u2))
end

amomx(sol) = [amomx(sol, t) for t ∈ sol.t]

function amomy(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return ((lao*ma)*(pxp*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))-pzp*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))))) + (mb*(la*pxp*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))+lbo*pxp*(((cq5)*(cq6))*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))))-la*pzp*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)))-lbo*pzp*(((cq5)*(cq6))*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1)))))) + (((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))*((ixa*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3)))+(ixa*((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)))+(ixa*(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))+ixa*u1+((lbo*mb)*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - la*u2)-((lbo*mb)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*(la*u3 - (la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))) + (((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))*((iya*((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)))+(iya*(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))+iya*u2-(iya*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3)))-(lao*ma)*((lao*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - lao*u2)-(mb*(la+lbo*((cq5)*(cq6))))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - la*u2)) + (((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))) + ((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1))) - ((cq5)*(sq6))*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))))*((iyb*((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4))))+(iyb*((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4))))+(iyb*(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))+iyb*u5+(iyb*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2+(iyb*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3-(iyb*((cq5)*(sq6)))*u1-(mb*(lbo+la*((cq5)*(cq6))))*((lbo*((cq5)*(sq6)))*u1 - (lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))) - lbo*u5 - (lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2 - (lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)) + (((cq5)*(cq6))*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1))))*((ixb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4))))+(ixb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4))))+(ixb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4))))+ixb*u4+(ixb*((cq5)*(cq6)))*u1+(ixb*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))*u2+(ixb*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*u3-((la*mb)*((cq5)*(sq6)))*((lbo*((cq5)*(sq6)))*u1 - (lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))) - lbo*u5 - (lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2 - (lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)-((la*mb)*(sq5))*((lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))) + lbo*u6 + (lbo*(sq5))*u1 + (lbo*((cq5)*(cq4)))*u3 - (lbo*((cq5)*(sq4)))*u2)) - (((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1)))*((iza*((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1)))-(iza*((soz)*oyp + (coy)*(coz)*oxp)*(sq2))-(iza*(ozp + (soy)*oxp)*((cq2)*(cq1)))-iza*u3-(lao*ma)*(lao*u3 - (lao*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))-(mb*(la+lbo*((cq5)*(cq6))))*(la*u3 - (la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))) - ((sq5)*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((cq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1))) - ((cq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))))*((izb*((cq5)*(sq4)))*u2-(izb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4))))-(izb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4))))-(izb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))-izb*u6-(izb*(sq5))*u1-(izb*((cq5)*(cq4)))*u3-(mb*(lbo+la*((cq5)*(cq6))))*((lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))) + lbo*u6 + (lbo*(sq5))*u1 + (lbo*((cq5)*(cq4)))*u3 - (lbo*((cq5)*(sq4)))*u2))
end

amomy(sol) = [amomy(sol, t) for t ∈ sol.t]

function amomz(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return (((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))*((ixa*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(cq3)))+(ixa*((coz)*oyp - (coy)*(soz)*oxp)*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)))+(ixa*(ozp + (soy)*oxp)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))+ixa*u1+((lbo*mb)*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - la*u2)-((lbo*mb)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*(la*u3 - (la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))) + (((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3)))*((iya*((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)))+(iya*(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))+iya*u2-(iya*((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3)))-(lao*ma)*((lao*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - lao*u2)-(mb*(la+lbo*((cq5)*(cq6))))*((la*(((soz)*oyp + (coy)*(coz)*oxp)*((cq2)*(sq3))-((coz)*oyp - (coy)*(soz)*oxp)*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))-(ozp + (soy)*oxp)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)))) - la*u2)) + (((cq6)*(cq4) - (sq6)*(sq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))) + ((cq6)*(sq4) + (sq6)*(sq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))) - ((cq5)*(sq6))*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))))*((iyb*((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4))))+(iyb*((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4))))+(iyb*(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))+iyb*u5+(iyb*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2+(iyb*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3-(iyb*((cq5)*(sq6)))*u1-(mb*(lbo+la*((cq5)*(cq6))))*((lbo*((cq5)*(sq6)))*u1 - (lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))) - lbo*u5 - (lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2 - (lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)) + (((cq5)*(cq6))*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))))*((ixb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*((cq5)*(cq6)) + (sq2)*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)) - ((cq2)*(sq3))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4))))+(ixb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(cq6)) + ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) - ((cq2)*(sq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4))))+(ixb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(cq6)) + ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((sq6)*(sq4) - (cq6)*(sq5)*(cq4))))+ixb*u4+(ixb*((cq5)*(cq6)))*u1+(ixb*((sq6)*(cq4) + (cq6)*(sq5)*(sq4)))*u2+(ixb*((sq6)*(sq4) - (cq6)*(sq5)*(cq4)))*u3-((la*mb)*((cq5)*(sq6)))*((lbo*((cq5)*(sq6)))*u1 - (lbo*(((soz)*oyp + (coy)*(coz)*oxp)*((sq2)*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((cq2)*(cq3))*((cq5)*(sq6)) - ((cq2)*(sq3))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) - ((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*((cq5)*(sq6)) - ((cq2)*(sq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))+(ozp + (soy)*oxp)*(((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)) + ((cq2)*(cq1))*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)) - ((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*((cq5)*(sq6))))) - lbo*u5 - (lbo*((cq6)*(cq4) - (sq6)*(sq5)*(sq4)))*u2 - (lbo*((cq6)*(sq4) + (sq6)*(sq5)*(cq4)))*u3)-((la*mb)*(sq5))*((lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))) + lbo*u6 + (lbo*(sq5))*u1 + (lbo*((cq5)*(cq4)))*u3 - (lbo*((cq5)*(sq4)))*u2)) - ((lao*ma)*(pxp*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))-pyp*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))))) - (mb*(la*pxp*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))+lbo*pxp*(((cq5)*(cq6))*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1))))-la*pyp*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)))-lbo*pyp*(((cq5)*(cq6))*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1)))))) - (((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1)))*((iza*((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1)))-(iza*((soz)*oyp + (coy)*(coz)*oxp)*(sq2))-(iza*(ozp + (soy)*oxp)*((cq2)*(cq1)))-iza*u3-(lao*ma)*(lao*u3 - (lao*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))-(mb*(la+lbo*((cq5)*(cq6))))*(la*u3 - (la*(((coz)*oyp - (coy)*(soz)*oxp)*((cq2)*(sq1))-((soz)*oyp + (coy)*(coz)*oxp)*(sq2)-(ozp + (soy)*oxp)*((cq2)*(cq1)))))) - ((sq5)*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((cq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))) - ((cq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))))*((izb*((cq5)*(sq4)))*u2-(izb*((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4))))-(izb*((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4))))-(izb*(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))-izb*u6-(izb*(sq5))*u1-(izb*((cq5)*(cq4)))*u3-(mb*(lbo+la*((cq5)*(cq6))))*((lbo*(((soz)*oyp + (coy)*(coz)*oxp)*(((cq2)*(cq3))*(sq5) + ((cq2)*(sq3))*((cq5)*(sq4)) + (sq2)*((cq5)*(cq4)))+((coz)*oyp - (coy)*(soz)*oxp)*(((sq3)*(cq1) + (cq3)*(sq2)*(sq1))*(sq5) - ((cq3)*(cq1) - (sq3)*(sq2)*(sq1))*((cq5)*(sq4)) - ((cq2)*(sq1))*((cq5)*(cq4)))+(ozp + (soy)*oxp)*(((sq3)*(sq1) - (cq3)*(sq2)*(cq1))*(sq5) + ((cq2)*(cq1))*((cq5)*(cq4)) - ((cq3)*(sq1) + (sq3)*(sq2)*(cq1))*((cq5)*(sq4))))) + lbo*u6 + (lbo*(sq5))*u1 + (lbo*((cq5)*(cq4)))*u3 - (lbo*((cq5)*(sq4)))*u2))
end

amomz(sol) = [amomz(sol, t) for t ∈ sol.t]

function p1x(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return px
end

p1x(sol) = [p1x(sol, t) for t ∈ sol.t]

function p1y(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return py
end

p1y(sol) = [p1y(sol, t) for t ∈ sol.t]

function p1z(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return pz
end

p1z(sol) = [p1z(sol, t) for t ∈ sol.t]

function p2x(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return px + la*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)))
end

p2x(sol) = [p2x(sol, t) for t ∈ sol.t]

function p2y(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return py + la*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))
end

p2y(sol) = [p2y(sol, t) for t ∈ sol.t]

function p2z(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return pz + la*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)))
end

p2z(sol) = [p2z(sol, t) for t ∈ sol.t]

function p3x(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return px + la*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))) + lb*(((cq5)*(cq6))*(((coy)*(coz))*((cq2)*(cq3)) + (soy)*((sq3)*(sq1) - (cq3)*(sq2)*(cq1)) - ((coy)*(soz))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*((soy)*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((coy)*(coz))*((cq2)*(sq3)) - ((coy)*(soz))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((coy)*(coz))*(sq2) + ((coy)*(soz))*((cq2)*(sq1)) + (soy)*((cq2)*(cq1))))
end

p3x(sol) = [p3x(sol, t) for t ∈ sol.t]

function p3y(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return py + la*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + lb*(((cq5)*(cq6))*(((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(cq3)) + ((coz)*(cox) - (soz)*(soy)*(sox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) - ((coy)*(sox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(cox) - (soz)*(soy)*(sox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) - ((soz)*(cox) + (coz)*(soy)*(sox))*((cq2)*(sq3)) - ((coy)*(sox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(cox) + (coz)*(soy)*(sox))*(sq2) - ((coz)*(cox) - (soz)*(soy)*(sox))*((cq2)*(sq1)) - ((coy)*(sox))*((cq2)*(cq1))))
end

p3y(sol) = [p3y(sol, t) for t ∈ sol.t]

function p3z(sol, t)
	@unpack ba, bb, eqx, eqy, eqz, g, ixa, ixb, iya, iyb, iza, izb, ka, kb, la, lao, lb, lbo, ma, mb, ox, oy, oz, px, py, pz = sol.prob.p
	@inbounds q1, q2, q3, q4, q5, q6, u1, u2, u3, u5, u6 = sol(t)

	oxp = derivative(ox, t, 1)
	oyp = derivative(oy, t, 1)
	ozp = derivative(oz, t, 1)
	pxp = derivative(px, t, 1)
	pyp = derivative(py, t, 1)
	pzp = derivative(pz, t, 1)
	ox = ox(t)
	oy = oy(t)
	oz = oz(t)
	px = px(t)
	py = py(t)
	pz = pz(t)

	cox = cos(ox); coy = cos(oy); coz = cos(oz); cq1 = cos(q1); cq2 = cos(q2); cq3 = cos(q3); cq4 = cos(q4); cq5 = cos(q5); cq6 = cos(q6)
	sox = sin(ox); soy = sin(oy); soz = sin(oz); sq1 = sin(q1); sq2 = sin(q2); sq3 = sin(q3); sq4 = sin(q4); sq5 = sin(q5); sq6 = sin(q6) 

	return pz + la*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + lb*(((cq5)*(cq6))*(((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(cq3)) + ((coz)*(sox) + (soz)*(soy)*(cox))*((sq3)*(cq1) + (cq3)*(sq2)*(sq1)) + ((coy)*(cox))*((sq3)*(sq1) - (cq3)*(sq2)*(cq1))) + ((sq6)*(cq4) + (cq6)*(sq5)*(sq4))*(((coz)*(sox) + (soz)*(soy)*(cox))*((cq3)*(cq1) - (sq3)*(sq2)*(sq1)) + ((coy)*(cox))*((cq3)*(sq1) + (sq3)*(sq2)*(cq1)) - ((soz)*(sox) - (coz)*(soy)*(cox))*((cq2)*(sq3))) + ((sq6)*(sq4) - (cq6)*(sq5)*(cq4))*(((soz)*(sox) - (coz)*(soy)*(cox))*(sq2) + ((coy)*(cox))*((cq2)*(cq1)) - ((coz)*(sox) + (soz)*(soy)*(cox))*((cq2)*(sq1))))
end

p3z(sol) = [p3z(sol, t) for t ∈ sol.t]

te(sol, t) = ke(sol, t) + pe(sol, t)
te(sol) = [te(sol, t) for t ∈ sol.t]
